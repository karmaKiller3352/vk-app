{"version":3,"sources":["components/Navbar.js","context/users/ContextUsers.js","components/UsersList.js","components/FriendsList.js","pages/Home.js","components/Attachment.js","components/UserWall.js","components/MutualFriends.js","pages/User.js","context/users/ReducerUsers.js","context/users/StateUsers.js","App.js","serviceWorker.js","index.js"],"names":["NavbarCustom","Navbar","bg","expand","variant","Container","className","to","alt","src","width","Toggle","aria-controls","Collapse","id","Nav","exact","ContextUsers","React","createContext","gender","UsersList","useContext","Context","state","dispatch","length","Row","Col","map","user","showFriends","key","md","photo_100","first_name","last_name","bdate","sex","friendsCount","is_closed","Form","Group","Button","type","onClick","payload","FriendsList","selectedUsers","filter","friends","flat","forEach","currentFriend","match","friend","Number","sortedFriends","sortBy","uniqBy","photo_50","Home","requests","useState","userId","setId","requestId","setRequestId","useEffect","a","fetchJsonp","userInfo","json","response","console","log","newUser","every","getUserFriends","friendsRequest","pr","friendList","items","deactivated","userData","getUserData","document","title","localStorage","setItem","JSON","stringify","onSubmit","e","preventDefault","Control","required","size","placeholder","onChange","value","target","Text","align","Attachment","data","photos","video","audio","Carousel","photo","sizes","text","Item","url","Caption","UserWall","owner","setOwner","post","Date","date","toLocaleString","copy_history","attachments","MutualFriends","User","wall","setWall","useParams","userWall","error","error_msg","getUserWall","mutualFriends","find","ReducerUser","action","targetUser","currentFlag","targetUserIndex","findIndex","updatedUser","update","$set","dataFromStorage","getItem","parse","ACCESS_TOKEN","App","useReducer","ReducerUsers","stateUsers","Provider","path","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"sTAIe,SAASA,IACtB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAAKC,QAAQ,WACvC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAASC,UAAU,eAAeC,GAAG,YACnC,yBACEC,IAAI,OACJF,UAAU,gBACVG,IAAI,sBACJC,MAAM,QAGV,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKT,UAAU,SACb,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,WAAWS,OAAK,GAAjD,Y,wECfGC,EAFMC,IAAMC,gBCGrBC,EAAS,CAAC,SAAU,SAAU,QAErB,SAASC,IAAa,IAAD,EACNC,qBAAWC,GAA/BC,EAD0B,EAC1BA,MAAOC,EADmB,EACnBA,SAEf,OAAqB,IAAjBD,EAAME,QAGR,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAKrB,UAAU,QACb,kBAACsB,EAAA,EAAD,KACE,6CAIHJ,EAAMK,KAAI,SAACC,GAAD,OACT,kBAACH,EAAA,EAAD,CACErB,UAAWwB,EAAKC,YAAc,eAAiB,OAC/CC,IAAKF,EAAKhB,IAEV,kBAACc,EAAA,EAAD,CAAKK,GAAI,GACP,yBAAKxB,IAAKqB,EAAKI,UAAW1B,IAAKsB,EAAKK,cAEtC,kBAACP,EAAA,EAAD,CAAKK,GAAI,GACP,4BACGH,EAAKK,WADR,IACqBL,EAAKM,YAG5B,kBAACR,EAAA,EAAD,CAAKK,GAAI,GACP,2BACE,4CADF,KACyBH,EAAKO,OAE9B,2BACE,qCADF,KACkBjB,EAAOU,EAAKQ,MAE9B,2BACE,4CADF,KACyBR,EAAKS,cAAgB,sBAE9C,2BACE,sCADF,KACmBT,EAAKU,UAAY,SAAW,WAGjD,kBAACZ,EAAA,EAAD,CAAKK,GAAI,GACP,kBAACQ,EAAA,EAAKC,MAAN,KACE,kBAAC,IAAD,CAAMpC,UAAU,kBAAkBC,GAAE,uBAAkBuB,EAAKhB,KAA3D,+CAIF,kBAAC2B,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,WACPpB,EAAS,CACPmB,KAAM,cACNE,QAAShB,EAAKhB,OALpB,gDAaJ,kBAACc,EAAA,EAAD,CAAKK,GAAI,GACP,kBAACQ,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACErC,UAAU,kBACVuC,QAAS,WACPpB,EAAS,CACPmB,KAAM,aACNE,QAAShB,EAAKhB,OALpB,gG,8CC9DC,SAASiC,IAAe,IAG/BC,EAFY1B,qBAAWC,GAArBC,MAEoByB,QAAO,SAACnB,GAAD,OAAUA,EAAKC,eAE5CmB,EAAO,YAAOF,EAAcnB,KAAI,SAACC,GAAD,OAAUA,EAAKoB,WAASC,QAE9DD,EAAQE,SAAQ,SAACC,GACf,IAAIC,EAAQ,EACZJ,EAAQE,SAAQ,SAACG,GACXA,EAAOzC,KAAO0C,OAAOH,EAAcvC,MACrCwC,GAAS,GAEXD,EAAcC,MAAd,iBAAgCA,SAIpC,IAAMG,EAAgBC,IAAOC,IAAOT,EAAS,MAAO,CAClD,aACA,cAGF,OACE,kBAAC,WAAD,KACE,kBAACvB,EAAA,EAAD,CAAKrB,UAAU,QACb,4CAGDmD,EAAc5B,KAAI,gBAAGM,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWwB,EAA1B,EAA0BA,SAAU9C,EAApC,EAAoCA,GAAIwC,EAAxC,EAAwCA,MAAxC,OACjB,kBAAC3B,EAAA,EAAD,CAAKK,IAAKlB,EAAIR,UAAWgD,GACvB,kBAAC1B,EAAA,EAAD,CAAKK,GAAI,GACP,kBAAC,IAAD,CAAM1B,GAAE,uBAAkBO,IACxB,yBAAKL,IAAKmD,EAAUpD,IAAK2B,MAG7B,kBAACP,EAAA,EAAD,CAAKK,GAAI,GACP,kBAAC,IAAD,CAAM1B,GAAE,uBAAkBO,IACvBqB,EADH,IACgBC,S,qBCnCb,SAASyB,IAAQ,IAAD,EACSvC,qBAAWC,GAAzCC,EADqB,EACrBA,MAAOC,EADc,EACdA,SAAUqC,EADI,EACJA,SADI,EAELC,mBAAS,IAFJ,mBAEtBC,EAFsB,KAEdC,EAFc,OAGKF,mBAAS,IAHd,mBAGtBG,EAHsB,KAGXC,EAHW,KAgE7B,OAhDAC,qBAAU,WAAM,4CACd,WAA2BF,EAAW1C,GAAtC,mCAAA6C,EAAA,sEACyBC,IAAWR,EAASS,SAASL,IADtD,uBACUM,EADV,EACUA,KADV,SAE6BA,IAF7B,mBAEUC,EAFV,EAEUA,SAFV,wBAKIC,QAAQC,IAAI,oCALhB,mBAMW,GANX,WAQOF,EAAS,GARhB,2CAQ2B,GAR3B,WASQG,EAAUH,EAAS,IACPjD,EAAMqD,OAAM,SAAC/C,GAAD,OAAUA,EAAKhB,KAAO8D,EAAQ9D,MAV9D,kCAYiCwD,IAC3BR,EAASgB,eAAeF,EAAQ9D,KAbtC,eAYUiE,EAZV,iBAgBqBA,EAAeP,OAhBpC,QAgBUQ,EAhBV,OAiBUC,EAAaD,EAAGP,SAAWO,EAAGP,SAASS,MAAQ,GAE/ChC,EACJ+B,EAAWhC,QAAO,qBAAGkC,gBAAmC,GACpD5C,EAAeW,EAAQxB,OACvB0D,EAtBV,2BAuBSR,GAvBT,IAwBMrC,eACAW,UACAnB,aAAa,IAGfN,EAAS,CACPmB,KAAM,WACNE,QAASsC,IA/Bf,wBAkCIV,QAAQC,IAAI,oCAlChB,6CADc,sBAwCd,OAxCe,SAAD,6BAsCdU,CAAYnB,EAAW1C,GAEhB,kBAAM2C,EAAa,OACzB,CAAC3C,EAAOC,EAAUqC,EAAUI,IAC/BE,qBAAU,WACRkB,SAASC,MAAQ,kBAEnBnB,qBAAU,WACRoB,aAAaC,QAAQ,QAASC,KAAKC,UAAUnE,MAC5C,CAACA,IAEF,kBAAC,WAAD,KACE,kBAACiB,EAAA,EAAD,CAAMmD,SAzDW,SAACC,GACpBA,EAAEC,iBACF3B,EAAaH,GAEbC,EAAM,MAsDF,kBAACtC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKK,GAAI,GACP,kBAACQ,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKsD,QAAN,CACEC,UAAQ,EACRC,KAAK,KACLrD,KAAK,OACLsD,YAAY,UACZC,SArEO,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAChCnC,EAAMmC,IAqEMA,MAAOpC,IAET,kBAACvB,EAAA,EAAK6D,KAAN,CAAWhG,UAAU,cAArB,mBAGJ,kBAACsB,EAAA,EAAD,CAAKK,GAAI,GACP,kBAACQ,EAAA,EAAKC,MAAN,CAAY6D,MAAM,SAChB,kBAAC5D,EAAA,EAAD,CACErC,UAAU,QACV2F,KAAK,KACL7F,QAAQ,UACRwC,KAAK,UAJP,cAaR,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+BAGJ,kBAACD,EAAA,EAAD,CAAKrB,UAAU,YACb,kBAACsB,EAAA,EAAD,CAAKK,GAAI,GACP,kBAACZ,EAAD,OAEF,kBAACO,EAAA,EAAD,CAAKK,GAAI,EAAG3B,UAAU,mBACpB,kBAACyC,EAAD,S,aClFKyD,MA9Bf,YAA+B,IAATC,EAAQ,EAARA,KACdC,EAASD,EAAKxD,QAAO,kBAAuB,UAAvB,EAAGL,QACxB+D,EAAQF,EAAKxD,QAAO,kBAAuB,UAAvB,EAAGL,QACvBgE,EAAQH,EAAKxD,QAAO,kBAAuB,UAAvB,EAAGL,QAE7B,OACE,kBAAC,WAAD,KACG8D,EAAOhF,OAAS,EACf,kBAACmF,EAAA,EAAD,KACGH,EAAO7E,KAAI,oBAAGiF,MAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAMlG,EAAzB,EAAyBA,GAAzB,OACV,kBAAC+F,EAAA,EAASI,KAAV,CAAejF,IAAKlB,GAClB,yBACER,UAAU,gBACVG,IAAKsG,EAAM,GAAGG,IACd1G,IAAI,gBAEN,kBAACqG,EAAA,EAASM,QAAV,KACE,2BAAIH,SAKV,KACHL,EAAMjF,OAAS,GAAKkF,EAAMlF,OAAS,EAClC,gFACE,OCtBK,SAAS0F,EAAT,GAAiC,IAAbX,EAAY,EAAZA,KAAM3F,EAAM,EAANA,GAC/BgD,EAAaxC,qBAAWC,GAAxBuC,SADqC,EAEnBC,mBAAS,MAFU,mBAEtCsD,EAFsC,KAE/BC,EAF+B,KAqB7C,OAjBAlD,qBAAU,WAAM,4CACd,kCAAAC,EAAA,sEACyBC,IAAWR,EAASS,SAASzD,IADtD,uBACU0D,EADV,EACUA,KADV,SAE6BA,IAF7B,mBAEUC,EAFV,EAEUA,SAFV,wBAKIC,QAAQC,IAAI,oCALhB,mBAMW,GANX,QAQED,QAAQC,IAAIF,EAAS,IACrB6C,EAAS7C,EAAS,IATpB,6CADc,uBAAC,WAAD,wBAYdY,KACC,CAACvE,EAAIgD,IACRM,qBAAU,WACJiD,IAAO/B,SAASC,MAAT,UAAoB8B,EAAMlF,WAA1B,YAAwCkF,EAAMjF,UAA9C,iBAERqE,IACe,IAAhBA,EAAK/E,OACA,kFAEF+E,EAAK5E,KAAI,SAAC0F,GAAD,OACd,yBAAKjH,UAAU,YAAY0B,IAAKuF,EAAKzG,IACnC,kBAACa,EAAA,EAAD,CAAKrB,UAAU,eACb,kBAACsB,EAAA,EAAD,CAAKK,GAAI,GACP,yBAAKxB,IAAK4G,EAAMnF,UAAW1B,IAAI,GAAGF,UAAU,qBAE9C,kBAACsB,EAAA,EAAD,CAAKK,GAAI,GACP,4BACGoF,EAAMlF,WADT,IACsBkF,EAAMjF,WAE5B,wBAAI9B,UAAU,QACX,IAAIkH,KAAiB,IAAZD,EAAKE,MAAaC,oBAIlC,kBAAC/F,EAAA,EAAD,CAAKrB,UAAU,aACb,kBAACsB,EAAA,EAAD,CAAKK,GAAI,IACNsF,EAAKI,aACJ,oCACGJ,EAAKI,aAAa,GAAGC,YACpB,kBAAC,EAAD,CAAYnB,KAAMc,EAAKI,aAAa,GAAGC,cACrC,KAEJ,2BACGL,EAAKI,aAAa,GAAGX,KAAOO,EAAKI,aAAa,GAAGX,KAAO,OAG3D,MAEN,kBAACpF,EAAA,EAAD,CAAKK,GAAI,IACNsF,EAAKK,YAAc,kBAAC,EAAD,CAAYnB,KAAMc,EAAKK,cAAkB,KAC7D,2BAAIL,EAAKP,aCtCJa,MArBf,YAAqC,IAAZ3E,EAAW,EAAXA,QACvB,OACE,kBAAC,WAAD,KACGA,EAAQrB,KAAI,gBAAGM,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWF,EAA1B,EAA0BA,UAAWpB,EAArC,EAAqCA,GAArC,OACX,kBAACa,EAAA,EAAD,CAAKK,IAAKlB,GACR,kBAACc,EAAA,EAAD,CAAKK,GAAI,GACP,kBAAC,IAAD,CAAM1B,GAAE,uBAAkBO,IACxB,yBAAKL,IAAKyB,EAAW1B,IAAK2B,MAG9B,kBAACP,EAAA,EAAD,CAAKK,GAAI,GACP,kBAAC,IAAD,CAAM1B,GAAE,uBAAkBO,IACvBqB,EADH,IACgBC,UCPb,SAAS0F,IAAQ,IAAD,EACDxG,qBAAWC,GAA/BC,EADqB,EACrBA,MAAOsC,EADc,EACdA,SADc,EAELC,mBAAS,MAFJ,mBAEtBgE,EAFsB,KAEhBC,EAFgB,KAGvBlH,EAAOmH,cAAPnH,GAENsD,qBAAU,YACS,uCAAG,WAAOJ,GAAP,uBAAAK,EAAA,yDACbL,EADa,0CACE,GADF,uBAEKM,IAAWR,EAASoE,SAASlE,IAFlC,uBAEVQ,EAFU,EAEVA,KAFU,KAGlBE,QAHkB,SAGAF,IAHA,+BAGVG,IAHU,0BAIgBH,IAJhB,iBAIVC,EAJU,EAIVA,SAAU0D,EAJA,EAIAA,MAEL,KACTA,GACFzD,QAAQC,IAAIwD,EAAMC,WAClBJ,EAAQ,KAERA,EAAQ,YAAIvD,EAASS,QAXL,4CAAH,sDAcjBmD,CAAYvH,KACX,CAACA,EAAIgD,IAER,IAAMwE,EAAgB9G,EAAMyB,QAAO,qBAAGC,QAC5BqF,MAAK,SAAChF,GAAD,OAAYA,EAAOzC,KAAO0C,OAAO1C,SAGhD,OAAKA,EAGH,kBAAC,WAAD,KACE,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKK,GAAI,GACP,yCACA,8BAEF,kBAACL,EAAA,EAAD,CAAKK,GAAI,GACP,4CACA,+BAGJ,kBAACN,EAAA,EAAD,CAAKrB,UAAU,YACb,kBAACsB,EAAA,EAAD,CAAKK,GAAI,EAAG3B,UAAU,QACpB,kBAAC8G,EAAD,CAAUX,KAAMsB,EAAMjH,GAAIA,KAE5B,kBAACc,EAAA,EAAD,CAAKK,GAAI,EAAG3B,UAAU,gBACpB,kBAAC,EAAD,CAAe4C,QAASoF,OAnBhB,uD,6BCZHE,EAtBK,SAAChH,EAAOiH,GAC1B,OAAQA,EAAO7F,MACb,IAAK,cACH,OAAOpB,EAAMyB,QAAO,SAACnB,GAAD,OAAUA,EAAKhB,KAAO2H,EAAO3F,WACnD,IAAK,WACH,MAAM,CAAE2F,EAAO3F,SAAf,mBAA2BtB,IAC7B,IAAK,aACH,IAAMkH,EAAalH,EAAM+G,MAAK,SAACzG,GAAD,OAAUA,EAAKhB,KAAO2H,EAAO3F,WACrD6F,EAAcD,EAAW3G,YAEzB6G,EAAkBpH,EAAMqH,WAC5B,SAAC/G,GAAD,OAAUA,EAAKhB,KAAO2H,EAAO3F,WAEzBgG,EAAcC,IAAOL,EAAY,CACrC3G,YAAa,CAAEiH,MAAOL,KAExB,OAAOI,IAAOvH,EAAD,eAAWoH,EAAkB,CAAEI,KAAMF,KACpD,QACE,OAAOtH,ICnBPyH,EAAkBzD,aAAa0D,QAAQ,UAAY,KAE1CzC,EADFf,KAAKyD,MAAMF,GCYlBG,EAEJ,0EAEWtF,EAAW,CACtBS,SAAU,SAACzD,GAAD,8DACyCA,EADzC,oDACuFsI,EADvF,YAEVlB,SAAU,SAACpH,GAAD,6DACwCA,EADxC,yBAC2DsI,EAD3D,aAEVtE,eAAgB,SAAChE,GAAD,+DACoCA,EADpC,oDACkFsI,EADlF,aAqBHC,MAjBf,WAAgB,IAAD,EACaC,qBAAWC,EAAcC,GADtC,mBACNhI,EADM,KACCC,EADD,KAEb,OACE,kBAAC,EAAQgI,SAAT,CAAkBrD,MAAO,CAAE5E,QAAOC,WAAU2H,eAActF,aACxD,kBAAC,IAAD,KACE,kBAAC9D,EAAD,MACA,yBAAKM,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoJ,KAAM,WAAY1I,OAAK,EAAC2I,UAAW9F,IAC1C,kBAAC,IAAD,CAAO6F,KAAM,mBAAoBC,UAAW7B,SCvBpC8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzG,MACvB,2DCZN0G,IAASC,OAAO,kBAAC,EAAD,MAAS3E,SAAS4E,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtC,GACLzD,QAAQyD,MAAMA,EAAMuC,c","file":"static/js/main.0786a8ae.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nexport default function NavbarCustom() {\n  return (\n    <Navbar bg='primary' expand='lg' variant='primary'>\n      <Container>\n        <NavLink className='navbar-brand' to='/vk-app/'>\n          <img\n            alt='logo'\n            className='img-thumbnail'\n            src='assets/img/logo.png'\n            width='40'\n          />\n        </NavLink>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='w-100'>\n            <NavLink className='nav-link' to='/vk-app/' exact>\n              Home\n            </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React from 'react';\n\nconst ContextUsers = React.createContext();\n\nexport default ContextUsers;\n","import React, { Fragment, useContext } from 'react';\nimport { Row, Button, Col, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Context from '../context/users/ContextUsers';\n\nconst gender = ['HIDDEN', 'FEMALE', 'MALE'];\n\nexport default function UsersList() {\n  const { state, dispatch } = useContext(Context);\n\n  if (state.length === 0) return false;\n\n  return (\n    <Fragment>\n      <Row className='mb-4'>\n        <Col>\n          <h2>Added Users</h2>\n        </Col>\n      </Row>\n\n      {state.map((user) => (\n        <Row\n          className={user.showFriends ? 'choosed user' : 'user'}\n          key={user.id}\n        >\n          <Col md={2}>\n            <img src={user.photo_100} alt={user.first_name} />\n          </Col>\n          <Col md={2}>\n            <h3>\n              {user.first_name} {user.last_name}\n            </h3>\n          </Col>\n          <Col md={3}>\n            <p>\n              <b>Date of Birth</b>: {user.bdate}\n            </p>\n            <p>\n              <b>Gender</b>: {gender[user.sex]}\n            </p>\n            <p>\n              <b>Friends count</b>: {user.friendsCount || 'Information closed'}\n            </p>\n            <p>\n              <b>Profile</b>: {user.is_closed ? 'Closed' : 'Opened'}\n            </p>\n          </Col>\n          <Col md={2}>\n            <Form.Group>\n              <Link className='btn btn-primary' to={`/vk-app/user/${user.id}`}>\n                Перейти\n              </Link>\n            </Form.Group>\n            <Form.Group>\n              <Button\n                type='button'\n                onClick={() => {\n                  dispatch({\n                    type: 'REMOVE_USER',\n                    payload: user.id,\n                  });\n                }}\n              >\n                Удалить\n              </Button>\n            </Form.Group>\n          </Col>\n          <Col md={3}>\n            <Form.Group>\n              <Button\n                className='btn btn-primary'\n                onClick={() => {\n                  dispatch({\n                    type: 'CHECK_USER',\n                    payload: user.id,\n                  });\n                }}\n              >\n                Показать друзей\n              </Button>\n            </Form.Group>\n          </Col>\n        </Row>\n      ))}\n    </Fragment>\n  );\n}\n","import React, { Fragment, useContext } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Context from '../context/users/ContextUsers';\nimport { Link } from 'react-router-dom';\nimport sortBy from 'lodash/sortBy';\nimport uniqBy from 'lodash/uniqBy';\n\nexport default function FriendsList() {\n  const { state } = useContext(Context);\n\n  const selectedUsers = state.filter((user) => user.showFriends);\n\n  const friends = [...selectedUsers.map((user) => user.friends).flat()];\n\n  friends.forEach((currentFriend) => {\n    let match = 0;\n    friends.forEach((friend) => {\n      if (friend.id === Number(currentFriend.id)) {\n        match += 1;\n      }\n      currentFriend.match = `mutual-${match}`;\n    });\n  });\n\n  const sortedFriends = sortBy(uniqBy(friends, 'id'), [\n    'first_name',\n    'last_name',\n  ]);\n\n  return (\n    <Fragment>\n      <Row className='mb-4'>\n        <h2>Friend list</h2>\n      </Row>\n\n      {sortedFriends.map(({ first_name, last_name, photo_50, id, match }) => (\n        <Row key={id} className={match}>\n          <Col md={3}>\n            <Link to={`/vk-app/user/${id}`}>\n              <img src={photo_50} alt={first_name} />\n            </Link>\n          </Col>\n          <Col md={8}>\n            <Link to={`/vk-app/user/${id}`}>\n              {first_name} {last_name}\n            </Link>\n          </Col>\n        </Row>\n      ))}\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { Row, Button, Col, Form } from 'react-bootstrap';\n\nimport UsersList from '../components/UsersList';\nimport FriendsList from '../components/FriendsList';\nimport fetchJsonp from 'fetch-jsonp';\n\nimport Context from '../context/users/ContextUsers';\n\nexport default function Home() {\n  const { state, dispatch, requests } = useContext(Context);\n  const [userId, setId] = useState('');\n  const [requestId, setRequestId] = useState('');\n  //id390821853\n\n  const handleChange = ({ target: { value } }) => {\n    setId(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setRequestId(userId);\n\n    setId('');\n  };\n\n  useEffect(() => {\n    async function getUserData(requestId, state) {\n      const { json } = await fetchJsonp(requests.userInfo(requestId));\n      const { response } = await json();\n\n      if (!response) {\n        console.log('User with this id does not exist');\n        return false;\n      }\n      if (!response[0]) return false;\n      const newUser = response[0];\n      const existedId = state.every((user) => user.id !== newUser.id);\n      if (existedId) {\n        const friendsRequest = await fetchJsonp(\n          requests.getUserFriends(newUser.id)\n        );\n\n        const pr = await friendsRequest.json();\n        const friendList = pr.response ? pr.response.items : [];\n\n        const friends =\n          friendList.filter(({ deactivated }) => !deactivated) || [];\n        const friendsCount = friends.length;\n        const userData = {\n          ...newUser,\n          friendsCount,\n          friends,\n          showFriends: false,\n        };\n\n        dispatch({\n          type: 'ADD_USER',\n          payload: userData,\n        });\n      } else {\n        console.log('This user is already on the list');\n      }\n    }\n    getUserData(requestId, state);\n\n    return () => setRequestId('');\n  }, [state, dispatch, requests, requestId]);\n  useEffect(() => {\n    document.title = 'React VK App';\n  });\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(state));\n  }, [state]);\n  return (\n    <Fragment>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col md={9}>\n            <Form.Group>\n              <Form.Control\n                required\n                size='lg'\n                type='text'\n                placeholder='user id'\n                onChange={handleChange}\n                value={userId}\n              />\n              <Form.Text className='text-muted'>Enter user id</Form.Text>\n            </Form.Group>\n          </Col>\n          <Col md={3}>\n            <Form.Group align='right'>\n              <Button\n                className='w-100'\n                size='lg'\n                variant='primary'\n                type='submit'\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n\n      <Row>\n        <Col>\n          <hr />\n        </Col>\n      </Row>\n      <Row className='userlist'>\n        <Col md={9}>\n          <UsersList />\n        </Col>\n        <Col md={3} className='all-friend-list'>\n          <FriendsList />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nfunction Attachment({ data }) {\n  const photos = data.filter(({ type }) => type === 'photo');\n  const video = data.filter(({ type }) => type === 'video');\n  const audio = data.filter(({ type }) => type === 'audio');\n\n  return (\n    <Fragment>\n      {photos.length > 0 ? (\n        <Carousel>\n          {photos.map(({ photo: { sizes, text, id } }) => (\n            <Carousel.Item key={id}>\n              <img\n                className='d-block w-100'\n                src={sizes[4].url}\n                alt='First slide'\n              />\n              <Carousel.Caption>\n                <p>{text}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n      ) : null}\n      {video.length > 0 || audio.length > 0 ? (\n        <i>Post contains audio or video. Use official VK APP</i>\n      ) : null}\n    </Fragment>\n  );\n}\n\nexport default Attachment;\n","import React, { useEffect, useContext, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Context from '../context/users/ContextUsers';\nimport Attachment from '../components/Attachment';\nimport fetchJsonp from 'fetch-jsonp';\n\nexport default function UserWall({ data, id }) {\n  const { requests } = useContext(Context);\n  const [owner, setOwner] = useState(null);\n\n  useEffect(() => {\n    async function getUserData() {\n      const { json } = await fetchJsonp(requests.userInfo(id));\n      const { response } = await json();\n\n      if (!response) {\n        console.log('User with this id does not exist');\n        return false;\n      }\n      console.log(response[0]);\n      setOwner(response[0]);\n    }\n    getUserData();\n  }, [id, requests]);\n  useEffect(() => {\n    if (owner) document.title = `${owner.first_name} ${owner.last_name}'s Wall`;\n  });\n  if (!data) return false;\n  if (data.length === 0)\n    return <h2>This user hid his wall from accessing from outside</h2>;\n\n  return data.map((post) => (\n    <div className='wall-post' key={post.id}>\n      <Row className='post-header'>\n        <Col md={2}>\n          <img src={owner.photo_100} alt='' className='profile-picture' />\n        </Col>\n        <Col md={6}>\n          <h5>\n            {owner.first_name} {owner.last_name}\n          </h5>\n          <h6 className='date'>\n            {new Date(post.date * 1000).toLocaleString()}\n          </h6>\n        </Col>\n      </Row>\n      <Row className='post-body'>\n        <Col md={12}>\n          {post.copy_history ? (\n            <>\n              {post.copy_history[0].attachments ? (\n                <Attachment data={post.copy_history[0].attachments} />\n              ) : null}\n\n              <p>\n                {post.copy_history[0].text ? post.copy_history[0].text : null}\n              </p>\n            </>\n          ) : null}\n        </Col>\n        <Col md={12}>\n          {post.attachments ? <Attachment data={post.attachments} /> : null}\n          <p>{post.text}</p>\n        </Col>\n      </Row>\n    </div>\n  ));\n}\n","import React, { Fragment } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nfunction MutualFriends({ friends }) {\n  return (\n    <Fragment>\n      {friends.map(({ first_name, last_name, photo_100, id }) => (\n        <Row key={id}>\n          <Col md={3}>\n            <Link to={`/vk-app/user/${id}`}>\n              <img src={photo_100} alt={first_name} />\n            </Link>\n          </Col>\n          <Col md={8}>\n            <Link to={`/vk-app/user/${id}`}>\n              {first_name} {last_name}\n            </Link>\n          </Col>\n        </Row>\n      ))}\n    </Fragment>\n  );\n}\n\nexport default MutualFriends;\n","import React, { Fragment, useEffect, useContext, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport fetchJsonp from 'fetch-jsonp';\nimport Context from '../context/users/ContextUsers';\nimport UserWall from '../components/UserWall';\nimport MutualFriends from '../components/MutualFriends';\n\nexport default function User() {\n  const { state, requests } = useContext(Context);\n  const [wall, setWall] = useState(null);\n  let { id } = useParams();\n\n  useEffect(() => {\n    const getUserWall = async (userId) => {\n      if (!userId) return false;\n      const { json } = await fetchJsonp(requests.userWall(userId));\n      console.log(await json());\n      const { response, error } = await json();\n\n      const data = null;\n      if (error) {\n        console.log(error.error_msg);\n        setWall([]);\n      } else {\n        setWall([...response.items]);\n      }\n    };\n    getUserWall(id);\n  }, [id, requests]);\n\n  const mutualFriends = state.filter(({ friends }) =>\n    friends.find((friend) => friend.id === Number(id))\n  );\n\n  if (!id) return <h2>This user doesnot exist</h2>;\n\n  return (\n    <Fragment>\n      <Row>\n        <Col md={9}>\n          <h2>User wall</h2>\n          <hr />\n        </Col>\n        <Col md={3}>\n          <h2>Friends with</h2>\n          <hr />\n        </Col>\n      </Row>\n      <Row className='userlist'>\n        <Col md={9} className='wall'>\n          <UserWall data={wall} id={id} />\n        </Col>\n        <Col md={3} className='friends-list'>\n          <MutualFriends friends={mutualFriends} />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n","import update from 'immutability-helper';\nconst ReducerUser = (state, action) => {\n  switch (action.type) {\n    case 'REMOVE_USER':\n      return state.filter((user) => user.id !== action.payload);\n    case 'ADD_USER':\n      return [action.payload, ...state];\n    case 'CHECK_USER':\n      const targetUser = state.find((user) => user.id === action.payload);\n      const currentFlag = targetUser.showFriends;\n\n      const targetUserIndex = state.findIndex(\n        (user) => user.id === action.payload\n      );\n      const updatedUser = update(targetUser, {\n        showFriends: { $set: !currentFlag },\n      });\n      return update(state, { [targetUserIndex]: { $set: updatedUser } });\n    default:\n      return state;\n  }\n};\n\nexport default ReducerUser;\n","const dataFromStorage = localStorage.getItem('users') || '[]';\nconst data = JSON.parse(dataFromStorage);\nexport default data;\n","import React, { useReducer } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport NavbarCustom from './components/Navbar';\n\nimport Home from './pages/Home';\nimport User from './pages/User';\n\nimport Context from './context/users/ContextUsers';\nimport ReducerUsers from './context/users/ReducerUsers';\nimport stateUsers from './context/users/StateUsers';\n\nconst ACCESS_TOKEN =\n  /*'b0df5930b0df5930b0df59304cb0ae9b5abb0dfb0df5930ee6a187f1011c1f499ede2f0';*/\n  '4b7861134b7861134b786113794b09feea44b784b78611315d6ecd19751dc711d47446d';\n\nexport const requests = {\n  userInfo: (id) =>\n    `https://api.vk.com/method/users.get?&user_ids=${id}&fields=photo_100,bdate,sex&access_token=${ACCESS_TOKEN}&v=5.89`,\n  userWall: (id) =>\n    `https://api.vk.com/method/wall.get?&owner_id=${id}&access_token=${ACCESS_TOKEN}&v=5.103`,\n  getUserFriends: (id) =>\n    `https://api.vk.com/method/friends.get?&user_id=${id}&order=name&fields=photo_50&access_token=${ACCESS_TOKEN}&v=5.89`,\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(ReducerUsers, stateUsers);\n  return (\n    <Context.Provider value={{ state, dispatch, ACCESS_TOKEN, requests }}>\n      <BrowserRouter>\n        <NavbarCustom />\n        <div className='container pt-4'>\n          <Switch>\n            <Route path={'/vk-app/'} exact component={Home} />\n            <Route path={'/vk-app/user/:id'} component={User} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}